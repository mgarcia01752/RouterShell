Usage:	iw [options] command
Options:
	--debug		enable netlink debugging
	--version	show version (5.16)
Commands:
	dev <devname> ap start 
	dev <devname> ap stop 
	phy <phyname> coalesce enable <config-file>
	phy <phyname> coalesce disable 
	phy <phyname> coalesce show 
	dev <devname> disconnect
	dev <devname> connect [-w] <SSID> [<freq in MHz>] [<bssid>] [auth open|shared] [key 0:abcde d:1:6162636465] [mfp:req/opt/no]
	dev <devname> auth <SSID> <bssid> <type:open|shared> <freq in MHz> [key 0:abcde d:1:6162636465]
	dev <devname> cqm rssi <threshold|off> [<hysteresis>]
	event [-t|-T|-r] [-f]
	dev <devname> ftm get_stats 
	dev <devname> ftm start_responder [lci=<lci buffer in hex>] [civic=<civic buffer in hex>]
	phy <phyname> hwsim getps 
	phy <phyname> hwsim setps <value>
	phy <phyname> hwsim stopqueues 
	phy <phyname> hwsim wakequeues 
	dev <devname> ibss leave
	dev <devname> ibss join <SSID> <freq in MHz> [NOHT|HT20|HT40+|HT40-|5MHz|10MHz|80MHz] [fixed-freq] [<fixed bssid>] [beacon-interval <TU>] [basic-rates <rate in Mbps,rate2,...>] [mcast-rate <rate in Mbps>] [key d:0:abcde]
	phy <phyname> info
	list
	phy
	commands
	features 
	phy <phyname> interface add <name> type <type> [mesh_id <meshid>] [4addr on|off] [flags <flag>*] [addr <mac-addr>]
	dev <devname> interface add <name> type <type> [mesh_id <meshid>] [4addr on|off] [flags <flag>*] [addr <mac-addr>]
	dev <devname> del
	dev <devname> info
	dev
	dev <devname> switch freq <freq> [NOHT|HT20|HT40+|HT40-|5MHz|10MHz|80MHz] [beacons <count>] [block-tx]
	dev <devname> switch freq <control freq> [5|10|20|40|80|80+80|160] [<center1_freq> [<center2_freq>]] [beacons <count>] [block-tx]
	dev <devname> switch channel <channel> [NOHT|HT20|HT40+|HT40-|5MHz|10MHz|80MHz] [beacons <count>] [block-tx]
	help [command]
	dev <devname> link
	dev <devname> measurement ftm_request <config-file> [timeout=<seconds>] [randomise[=<addr>/<mask>]]
	dev <devname> mesh join <mesh ID> [[freq <freq in MHz> <NOHT|HT20|HT40+|HT40-|80MHz>] [basic-rates <rate in Mbps,rate2,...>]], [mcast-rate <rate in Mbps>] [beacon-interval <time in TUs>] [dtim-period <value>] [vendor_sync on|off] [<param>=<value>]*
	dev <devname> mesh leave
	dev <devname> mesh_param dump 
	dev <devname> mgmt dump frame <type as hex ab> <pattern as hex ab:cd:..> [frame <type> <pattern>]* [count <frames>]
	dev <devname> mpath probe <destination MAC address> frame <frame>
	dev <devname> mpath get <MAC address>
	dev <devname> mpath del <MAC address>
	dev <devname> mpath new <destination MAC address> next_hop <next hop MAC address>
	dev <devname> mpath set <destination MAC address> next_hop <next hop MAC address>
	dev <devname> mpath dump
	dev <devname> mpp get <MAC address>
	dev <devname> mpp dump
	wdev <idx> nan start pref <pref> [bands [2GHz] [5GHz]]
	wdev <idx> nan stop 
	wdev <idx> nan config [pref <pref>] [bands [2GHz] [5GHz]]
	wdev <idx> nan rm_func cookie <cookie>
	wdev <idx> nan add_func type <publish|subscribe|followup> [active] [solicited] [unsolicited] [bcast] [close_range] name <name> [info <info>] [flw_up_id <id> flw_up_req_id <id> flw_up_dest <mac>] [ttl <ttl>] [srf <include|exclude> <bf|list> [bf_idx] [bf_len] <mac1;mac2...>] [rx_filter <str1:str2...>] [tx_filter <str1:str2...>]
	dev <devname> ocb join <freq in MHz> <5MHz|10MHz>
	dev <devname> ocb leave
	dev <devname> offchannel <freq> <duration>
	wdev <idx> p2p start 
	wdev <idx> p2p stop 
	phy <phyname> channels
	dev <devname> cac channel <channel> [NOHT|HT20|HT40+|HT40-|5MHz|10MHz|80MHz]
	dev <devname> cac freq <freq> [NOHT|HT20|HT40+|HT40-|5MHz|10MHz|80MHz]
	dev <devname> cac freq <control freq> [5|10|20|40|80|80+80|160] [<center1_freq> [<center2_freq>]]
	dev <devname> cac trigger channel <channel> [NOHT|HT20|HT40+|HT40-|5MHz|10MHz|80MHz]
	dev <devname> cac trigger freq <frequency> [NOHT|HT20|HT40+|HT40-|5MHz|10MHz|80MHz]
	dev <devname> cac trigger freq <frequency> [5|10|20|40|80|80+80|160] [<center1_freq> [<center2_freq>]]
	reg set <ISO/IEC 3166-1 alpha2>
	reg get
	phy <phyname> reg get
	reg reload
	dev <devname> roc start <freq> <time in ms>
	dev <devname> scan [-u] [freq <freq>*] [duration <dur>] [ies <hex as 00:11:..>] [meshid <meshid>] [lowpri,flush,ap-force,duration-mandatory] [randomise[=<addr>/<mask>]] [ssid <ssid>*|passive]
	dev <devname> scan dump [-u]
	dev <devname> scan trigger [freq <freq>*] [duration <dur>] [ies <hex as 00:11:..>] [meshid <meshid>] [lowpri,flush,ap-force,duration-mandatory,coloc] [randomise[=<addr>/<mask>]] [ssid <ssid>*|passive]
	dev <devname> scan abort 
	dev <devname> scan sched_start [interval <in_msecs> | scan_plans [<interval_secs:iterations>*] <interval_secs>] [delay <in_secs>] [freqs <freq>+] [matches [ssid <ssid>]+]] [active [ssid <ssid>]+|passive] [randomise[=<addr>/<mask>]] [coloc] [flush]
	dev <devname> scan sched_stop 
	dev <devname> get mesh_param [<param>]
	phy <phyname> get txq 
	dev <devname> get power_save 
	dev <devname> set bitrates [legacy-<2.4|5> <legacy rate in Mbps>*] [ht-mcs-<2.4|5> <MCS index>*] [vht-mcs-<2.4|5> [he-mcs-<2.4|5|6> <NSS:MCSx,MCSy... | NSS:MCSx-MCSy>*] [sgi-2.4|lgi-2.4] [sgi-5|lgi-5] [he-gi-<2.4|5|6> <0.8|1.6|3.2>] [he-ltf-<2.4|5|6> <1|2|4>]
	dev <devname> set monitor <flag>*
	dev <devname> set meshid <meshid>
	dev <devname> set type <type>
	dev <devname> set 4addr <on|off>
	dev <devname> set noack_map <map>
	dev <devname> set peer <MAC address>
	dev <devname> set mcast_rate <rate in Mbps>
	dev <devname> set tidconf [peer <MAC address>] tids <mask> [override] [sretry <num>] [lretry <num>] [ampdu [on|off]] [amsdu [on|off]] [noack [on|off]] [rtscts [on|off]][bitrates <type [auto|fixed|limit]> [legacy-<2.4|5> <legacy rate in Mbps>*] [ht-mcs-<2.4|5> <MCS index>*] [vht-mcs-<2.4|5> <NSS:MCSx,MCSy... | NSS:MCSx-MCSy>*] [sgi-2.4|lgi-2.4] [sgi-5|lgi-5]]
	dev <devname> set mesh_param <param>=<value> [<param>=<value>]*
	phy <phyname> set name <new name>
	phy <phyname> set freq <freq> [NOHT|HT20|HT40+|HT40-|5MHz|10MHz|80MHz|160MHz]
	phy <phyname> set freq <control freq> [5|10|20|40|80|80+80|160] [<center1_freq> [<center2_freq>]]
	dev <devname> set freq <freq> [NOHT|HT20|HT40+|HT40-|5MHz|10MHz|80MHz|160MHz]
	dev <devname> set freq <control freq> [5|10|20|40|80|80+80|160] [<center1_freq> [<center2_freq>]]
	phy <phyname> set channel <channel> [NOHT|HT20|HT40+|HT40-|5MHz|10MHz|80MHz|160MHz]
	dev <devname> set channel <channel> [NOHT|HT20|HT40+|HT40-|5MHz|10MHz|80MHz|160MHz]
	phy <phyname> set frag <fragmentation threshold|off>
	phy <phyname> set rts <rts threshold|off>
	phy <phyname> set retry [short <limit>] [long <limit>]
	phy <phyname> set netns { <pid> | name <nsname> }
	phy <phyname> set coverage <coverage class>
	phy <phyname> set distance <auto|distance>
	phy <phyname> set txpower <auto|fixed|limit> [<tx power in mBm>]
	dev <devname> set txpower <auto|fixed|limit> [<tx power in mBm>]
	phy <phyname> set antenna <bitmap> | all | <tx bitmap> <rx bitmap>
	phy <phyname> set txq limit <packets> | memory_limit <bytes> | quantum <bytes>
	dev <devname> set power_save <on|off>
	phy <phyname> set sar_specs <sar type> <range index:sar power>*
	dev <devname> survey dump
	dev <devname> vendor send <oui> <subcmd> <filename|-|hex data>
	dev <devname> vendor recv <oui> <subcmd> <filename|-|hex data>
	dev <devname> vendor recvbin <oui> <subcmd> <filename|-|hex data>
	phy <phyname> wowlan enable [any] [disconnect] [magic-packet] [gtk-rekey-failure] [eap-identity-request] [4way-handshake] [rfkill-release] [net-detect [interval <in_msecs> | scan_plans [<interval_secs:iterations>*] <interval_secs>] [delay <in_secs>] [freqs <freq>+] [matches [ssid <ssid>]+]] [active [ssid <ssid>]+|passive] [randomise[=<addr>/<mask>]] [coloc] [flush]] [tcp <config-file>] [patterns [offset1+]<pattern1> ...]
	phy <phyname> wowlan disable 
	phy <phyname> wowlan show 
	dev <devname> station get <MAC address>
	dev <devname> station del <MAC address> [subtype <subtype>] [reason-code <code>]
	dev <devname> station dump [-v]
	dev <devname> station set <MAC address> txpwr <auto|limit> [<tx power dBm>]
	dev <devname> station set <MAC address> airtime_weight <weight>
	dev <devname> station set <MAC address> mesh_power_mode <active|light|deep>
	dev <devname> station set <MAC address> vlan <ifindex>
	dev <devname> station set <MAC address> plink_action <open|block>

Commands that use the netdev ('dev') can also be given the
'wdev' instead to identify the device.

You can omit the 'phy' or 'dev' if the identification is unique,
e.g. "iw wlan0 info" or "iw phy0 info". (Don't when scripting.)

Do NOT screenscrape this tool, we don't consider its output stable.

